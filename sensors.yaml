#Weather prediction
#  - platform: yr

- platform: mqtt
  name: Octoprint printing progress
  state_topic: "octoPrint/progress/printing"
  value_template: "{{ value_json.progress }}"
  unit_of_measurement: '%'

- platform: mqtt
  name: Octoprint printer status
  state_topic: "octoPrint/event/PrinterStateChanged"
  value_template: "{{ value_json.state_string }}"

- platform: mqtt
  name: Octoprint bed temperature
  state_topic: "octoPrint/temperature/bed"
  value_template: "{{ value_json.actual}}"
  unit_of_measurement: '°C'

- platform: mqtt
  name: Octoprint nozzle temperature
  state_topic: "octoPrint/temperature/tool0"
  value_template: "{{ value_json.actual}}"
  unit_of_measurement: '°C'

- platform: mqtt
  name: Zigbee2mqtt Networkmap
  # if you change base_topic of Zigbee2mqtt, change state_topic accordingly
  state_topic: zigbee2mqtt/bridge/networkmap/raw
  value_template: >-
    {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
  # again, if you change base_topic of Zigbee2mqtt, change json_attributes_topic accordingly
  json_attributes_topic: zigbee2mqtt/bridge/networkmap/raw

- platform: mqtt
  name: Bridge state
  state_topic: "zigbee2mqtt/bridge/state"
  icon: mdi:router-wireless

- platform: mqtt
  state_topic: 'mysensors-out/169/2/1/0/1'
  name: 'Weerhuis luchtvochtigheid'
  unit_of_measurement: '%'
- platform: mqtt
  state_topic: 'mysensors-out/169/3/1/0/0'
  name: 'Weerhuis temperatuur'
  unit_of_measurement: '°C'
- platform: mqtt
  state_topic: 'mysensors-out/169/4/1/0/23'
  name: 'Weerhuis lux'
  unit_of_measurement: 'lux'

- platform: mqtt
  state_topic: 'mysensors-out/168/2/1/0/1'
  name: 'Buiten luchtvochtigheid'
  unit_of_measurement: '%'
- platform: mqtt
  state_topic: 'mysensors-out/168/3/1/0/0'
  name: 'Buiten temperatuur'
  unit_of_measurement: '°C'
  #- platform: mqtt
  #state_topic: 'mysensors-out/169/4/1/0/23'
  #name: 'Weerhuis lux'
  #unit_of_measurement: 'lux'


  #- platform: miflora
  #  mac: 'C4:7C:8D:64:3B:41'

#- platform: miflora
#  mac: 'C4:7C:8D:64:45:97'
#  name: Picea abies
#  force_update: false
#  median: 3
#  monitored_conditions:
#    - moisture
#    - light
#    - temperature
#    - conductivity
#    - battery

  #- platform: template
  #  sensors:
  #    huiskamer_hum:
  #      friendly_name: "Luchtvochtigheid huiskamer"
  #      unit_of_measurement: '%'
  #      value_template: "{{ states.sensor.sensebender_micro_1_2.state | int - 10 }}"

- platform: template
  sensors:
    televisie:
      friendly_name: Televisie
      icon_template: mdi:television
      value_template: >
        {% if is_state("media_player.audio_video_tv", "unavailable") -%}
          Uit
        {%- else -%}
          Aan
        {%- endif %}

- platform: template
  sensors:
    huiskamer:
      value_template: >
        {% if states.remote.huiskamer %}
          {{ state_attr('remote.huiskamer','current_activity') }}
        {% else %}
          Uit
        {% endif %}

- platform: mqtt
  name: CV Aanvoer
  state_topic: "/ventilator/CV_Aanvoer/Temperature"
  unit_of_measurement: '°C'

- platform: mqtt
  name: CV Afvoer
  state_topic: "/ventilator/CV_Afvoer/Temperature"
  unit_of_measurement: '°C'

- platform: mqtt
  name: Ventilator tijd
  state_topic: "/ventilator/itho/Timer"
  value_template: "{{value}}"
  unit_of_measurement: 's'
- platform: mqtt
  name : Ventilator snelheid
  state_topic: "/ventilator/itho/State"
  value_template: >
    {% if value|float==0 %}Standby{% endif %}
    {% if value|float==1 %}Laag{% endif %}
    {% if value|float==2 %}Medium{% endif %}
    {% if value|float==3 %}Hoog{% endif %}
    {% if value|float==4 %}Full{% endif %}
    {% if value|float>=11 %}Hoog(T){% endif %}
  force_update: true

- platform: time_date
  display_options:
    - 'date_time'

# kan hier geen now() gebruiken:
# force time update: https://community.home-assistant.io/t/template-sensor-not-updating/60965/2

- platform: template
  sensors:
    co2_woonkamer_lastupdate:
      friendly_name: Co2 sensor woonkamer last updated
      unit_of_measurement: 'min'
      value_template: '{{ ((as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) - as_timestamp(as_timestamp(states.sensor.woonkamer_mh_z19_co2_waarde.last_updated) | timestamp_local))/60)|round|int }}'
    co2_slaapkamer_lastupdate:
      friendly_name: Co2 sensor slaapkamer last updated
      unit_of_measurement: 'min'
      value_template: '{{ ((as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) - as_timestamp(as_timestamp(states.sensor.slaapkamer_mh_z19_co2_waarde.last_updated) | timestamp_local))/60)|round|int }}'
    co2_studeerkamer_lastupdate:
      friendly_name: Co2 sensor studeerkamer last updated
      unit_of_measurement: 'min'
      value_template: '{{ ((as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) - as_timestamp(as_timestamp(states.sensor.studeerkamer_mh_z19_co2_waarde.last_updated) | timestamp_local))/60)|round|int  }}'
    watermeter_lastupdate:
      friendly_name: Watermeter last updated
      unit_of_measurement: 'min'
      value_template: '{{ ((as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) - as_timestamp(as_timestamp(states.sensor.watermeter.last_updated) | timestamp_local))/60)|round|int }}'
    ventilator_snelheid_lastupdate:
      friendly_name: Ventilator snelheid last updated
      unit_of_measurement: 'min'
      value_template: '{{ ((as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) - as_timestamp(as_timestamp(states.sensor.ventilator_snelheid.last_updated) | timestamp_local))/60)|round|int }}'
    weerhuis_temperatuur_lastupdate:
      friendly_name: Weerhuis temperatuur last updated
      unit_of_measurement: 'min'
      value_template: '{{ ((as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M")) - as_timestamp(as_timestamp(states.sensor.weerhuis_temperatuur.last_updated) | timestamp_local))/60)|round|int }}'
